input:
    - id
    - effectiveMap
    - assignmentMap
    - phases
    - modi
    - inbox
    - TARGET_BITS
    - INTERNAL_BITS
    - MODUS_BITS
    - INIT_PHASE
    - AUTO_PHASE
    - INTERNAL_PHASE
    - EXTERNAL_PHASE
    - IDLE_PHASE

output:
    assignments

formulas:
    currentPhase: phases[id]
    modus: modi[id]

    currentEventKey: |
        inbox
        |> filter(
            ((value()[0] & ((1 << INTERNAL_BITS) - 1)) >> TARGET_BITS == id) &&
            ((value()[0] >> INTERNAL_BITS) == (currentPhase == INTERNAL_PHASE ? 1 : 0))
        |> head

    currentEvent: |
        currentPhase == AUTO_PHASE ? null : inbox[currentEventKey]

    currentEventType: |
        currentEvent ? currentEvent[0] & ((1 << TARGET_BITS) - 1) : 0

    juncture: |
        currentPhase == INIT_PHASE ? 0 : ((modus << MODUS_BITS) | currentEventType)

    baseAssignments: assignmentMap[juncture]
    effective: effectiveMap[juncture]

    nextPhase: |
            (effective || currentPhase == IDLE_PHASE) ? AUTO_PHASE : currentPhase + 1

    assignments: |
        concat(baseAssignments,
            [put(phases, id, nextPhase),
             delete(inbox, currentEventID)])
